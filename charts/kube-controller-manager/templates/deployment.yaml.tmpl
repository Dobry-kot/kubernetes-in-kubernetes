
{{- $baseName           := include "kube-controller-manager.name" . -}}
{{- $selectorLabels     := include "kube-controller-manager.selectorLabels" . -}}
{{- $commonLabels       := include "kube-controller-manager.labels" . -}}
{{- $currentNamespace   := .Release.Namespace -}}

{{- with .Values.applications.kubeControllerManager.Deployment }}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ $baseName }}"
  labels:
    {{- $commonLabels | nindent 4 }}
  {{- with .metadata.labels }}
    {{- toYaml . | nindent 4 }}
  {{- end }}

  {{- with .metadata.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}

spec:
  replicas: {{ .replicas }}

  {{- with .strategy }}
  strategy:
    {{- toYaml . | nindent 4 }}
  {{- end }}

  selector:
    matchLabels:
      {{- $selectorLabels | nindent 6 }}

  template:
    metadata:
      labels:
        {{- $commonLabels | nindent 8 }}
      {{- with .metadata.labels }}
        {{- toYaml . | nindent 8 }}
      {{- end }}

      {{- with .metadata.annotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    spec:

      {{- with .nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}

      {{- with .tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}

      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 1
              podAffinityTerm:
                topologyKey: {{ .affinity.topologyKey}}
                labelSelector:
                  matchLabels:
                    {{- $selectorLabels | nindent 20 }}

      automountServiceAccountToken: {{ .automountServiceAccountToken }}

      {{- with .containers.kubeControllerManager }}
      containers:
        - name: {{ $baseName }}
          image: {{ .image }}
          imagePullPolicy: {{ .imagePullPolicy }}

          {{- with .entryPoint.command }}
          command:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          args:
            - --authentication-kubeconfig=/etc/kubernetes/{{ $baseName }}.conf
            - --authorization-kubeconfig=/etc/kubernetes/{{ $baseName }}.conf
            - --kubeconfig=/etc/kubernetes/{{ $baseName }}.conf
            - --tls-cert-file=/pki/{{ $baseName }}-server/tls.crt
            - --tls-private-key-file=/pki/{{ $baseName }}-server/tls.key
          {{- with .entryPoint.args }}
            {{- toYaml . | nindent 12 }}
          {{- end }}
          
          {{- with .ports }}
          ports:
            {{- toYaml . | nindent 12 }}
          {{- end }}

          {{- with .livenessProbe }}
          livenessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}

          {{- with .resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}

          {{- with .envs }}
          env:
            {{- toYaml . | nindent 12 }}
          {{- end }}

          volumeMounts:
            - mountPath: /pki/{{ $baseName }}-server
              name: pki-{{ $baseName }}-server
            - mountPath: /pki/{{ $baseName }}-client
              name: pki-{{ $baseName }}-client
          {{- with .volumeMounts }}
            {{- toYaml . | nindent 12 }}
          {{- end }}
      {{- end }}
      volumes:
        - configMap:
            name: "{{ $baseName }}-conf"
          name: kubeconfig
        - secret:
            secretName: "pki-{{ $baseName }}-server"
          name: pki-{{ $baseName }}-server
        - secret:
            secretName: "pki-{{ $baseName }}-client"
          name: pki-{{ $baseName }}-client
      {{- with .volumes }}
        {{- toYaml . | nindent 8 }}
      {{- end }}

{{- end }}
