apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: kube-state-metrics
  name: kube-state-metrics
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: kube-state-metrics
  template:
    metadata:
      labels:
        app.kubernetes.io/name: kube-state-metrics
    spec:
      automountServiceAccountToken: true
      volumes:
        - configMap:
            defaultMode: 420
            name: kubeconfig
          name: kubeconfig
        - name: pki-kube-state-metrics-client
          secret:
            defaultMode: 420
            secretName: pki-kube-state-metrics-client
        - name: pki-kube-state-metrics-server
          secret:
            defaultMode: 420
            secretName: pki-kube-state-metrics-server
      containers:
      - image: k8s.gcr.io/kube-state-metrics/kube-state-metrics:v2.4.2
        args:
          - --kubeconfig=/etc/kubernetes/admin.conf
        volumeMounts:
          - mountPath: /etc/kubernetes/
            name: kubeconfig
            readOnly: true
          - mountPath: /pki/kubeconfig
            name: pki-kube-state-metrics-client
          - mountPath: /pki/server
            name: pki-kube-state-metrics-server
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 5
          timeoutSeconds: 5
        name: kube-state-metrics
        ports:
        - containerPort: 8080
          name: http-metrics
        - containerPort: 8081
          name: telemetry
        readinessProbe:
          httpGet:
            path: /
            port: 8081
          initialDelaySeconds: 5
          timeoutSeconds: 5
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsUser: 65534
      nodeSelector:
        kubernetes.io/os: linux
      serviceAccountName: kube-state-metrics