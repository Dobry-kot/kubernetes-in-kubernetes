
{{- $baseName         := include "konnectivity.name" . -}}
{{- $selectorLabels   := include "konnectivity.selectorLabels" . -}}
{{- $commonLabels     := include "konnectivity.labels" . -}}
{{- $currentNamespace := .Release.Namespace -}}

{{- if .Values.applications.konnectivityServer.enable }}
  {{- with .Values.applications.konnectivityServer.Deployment }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ $baseName }}-server"

  labels:
    {{- $commonLabels | nindent 4 }}
  {{- with .metadata.labels }}
    {{- toYaml . | nindent 4 }}
  {{- end }}

  {{- with .metadata.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}

spec:
  replicas: {{ .replicas }}

  {{- with .strategy }}
  strategy:
    {{- toYaml . | nindent 4 }}
  {{- end }}

  selector:
    matchLabels:
      {{- $selectorLabels | nindent 6 }}

  template:
    metadata:
      labels:
        {{- $commonLabels | nindent 8 }}
      {{- with .metadata.labels }}
        {{- toYaml . | nindent 8 }}
      {{- end }}

      {{- with .metadata.annotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}

    spec:
  
      {{- with .tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}

      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 1
              podAffinityTerm:
                topologyKey: {{ .affinity.topologyKey}}
                labelSelector:
                  matchLabels:
                    {{- $selectorLabels | nindent 20 }}

      automountServiceAccountToken: {{ .automountServiceAccountToken }}

      {{- with .containers.konnectivityServer }}
      containers:
        - command:
          - /proxy-server
          - --logtostderr=true
          - --server-id=$(POD_NAME)
          - --cluster-cert=/pki/apiserver/tls.crt
          - --cluster-key=/pki/apiserver/tls.key
          - --mode=http-connect
          - --server-ca-cert=/pki/server/ca.crt
          - --server-cert=/pki/server/tls.crt
          - --server-key=/pki/server/tls.key
          - --server-port=8131
          - --agent-port=8132
          - --admin-port=8133
          - --health-port=8134
          - --agent-namespace=terra-system
          - --agent-service-account=konnectivity-agent
          - --kubeconfig=/etc/kubernetes/admin.conf
          - --authentication-audience=system:konnectivity-server
          - --keepalive-time=1h
          ports:
            - containerPort: 8132
              name: agentport
            - containerPort: 8133
              name: adminport
            - containerPort: 8134
              name: healthport
          image: "us.gcr.io/k8s-artifacts-prod/kas-network-proxy/proxy-server:v0.0.30"
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 8
            httpGet:
              path: /healthz
              port: healthport
              scheme: HTTP
            initialDelaySeconds: 30
            timeoutSeconds: 60
          name: konnectivity-server
          resources:
            requests:
              cpu: 100m
              memory: 128Mi
          env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          volumeMounts:
          - mountPath: /pki/apiserver
            name: pki-kube-apiserver-server
          - mountPath: /pki/kubeconfig
            name: pki-konnectivity-client
          - mountPath: /pki/server
            name: pki-konnectivity-server
          - mountPath: /etc/kubernetes
            name: kubeconfig
            readOnly: true

      {{- end }}

      volumes:
        - secret:
            secretName: "pki-{{ $baseName }}-server"
          name: pki-{{ $baseName }}-server
        - secret:
            secretName: "pki-{{ $baseName }}-client"
          name: pki-{{ $baseName }}-client
        {{- with .volumes }}
        {{- toYaml . | nindent 8 }}
        {{- end }}

{{- end}}
{{- end }}