---
applications:

  konnectivityServer:

    Deployment:
      replicas: 3

      metadata:
        labels: {}
        annotations:
          reloader.stakater.com/auto: "true"

      nodeSelector: {}
        
      tolerations:
        - key: "node.kubernetes.io/unreachable"
          operator: "Exists"
          effect: "NoExecute"
          tolerationSeconds: 5
        - key: "node.kubernetes.io/not-ready"
          operator: "Exists"
          effect: "NoExecute"
          tolerationSeconds: 5

      affinity:
        topologyKey: kubernetes.io/hostname

      automountServiceAccountToken: false

      containers:
        konnectivityServer:
          image: "us.gcr.io/k8s-artifacts-prod/kas-network-proxy/proxy-server:v0.0.24"
          imagePullPolicy: IfNotPresent
          entryPoint:
            command:
              - "proxy-server"
            args:
              - --logtostderr=true
              - --server-id=$(POD_NAME)
              - --mode=http-connect
              - --agent-namespace=kube-system
              - --cluster-cert=/pki/apiserver/tls.crt
              - --cluster-key=/pki/apiserver/tls.key
              - --log-file=/var/log/konnectivity-server.log
              - --log-file-max-size=0
              - --uds-name=/etc/srv/kubernetes/konnectivity-server/konnectivity-server.socket
              - --keepalive-time=1h

          envs: 
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
          livenessProbe:
            failureThreshold: 8
            initialDelaySeconds: 30
            timeoutSeconds: 60
            httpGet:
              path: /healthz
              port: health
              scheme: HTTP
          ports: 
            - containerPort: 8090
              name: server
            - containerPort: 8091
              name: agent
            - containerPort: 8092
              name: admin
            - containerPort: 8093
              name: health
          volumeMounts:
            - mountPath: /etc/kubernetes/
              name: kubeconfig
              readOnly: true
            - mountPath: /pki/apiserver
              name: pki-apiserver
          resources:
            requests:
              cpu: 100m
              memory: 128Mi
    
      volumes:
        - secret:
            secretName: "pki-apiserver-server"
          name: pki-apiserver

      strategy:
        type: RollingUpdate
        rollingUpdate:
          maxSurge: 1
          maxUnavailable: 1

    Certificates:
      ca:
        metadata:
          labels: {}
          annotations: {}
        duration: 8760
        renewBefore: 4380
        measurement: h
        subject:
          organizations: []
        usages:
          - "signing"
          - "key encipherment"
          - "cert sign"
        isCA: true
        issuerRefName: selfsigning-issuer
      server:
        metadata:
          labels: {}
          annotations: {}
        duration: 8760
        renewBefore: 4380
        deltaRenewBeforeByInstance: 60
        measurement: h
        subject:
          organizations: []
        usages:
          - "signing"
          - "key encipherment"
          - "server auth"
        dnsNames:
          - "localhost"
        ipAddresses:
          - "127.0.0.1"
      client:
        metadata:
          labels: {}
          annotations: {}
        duration: 8760
        renewBefore: 4380
        deltaRenewBeforeByInstance: 60
        measurement: h
        subject:
          organizations: []
        usages:
          - "signing"
          - "key encipherment"
          - "client auth"
        dnsNames: []
        ipAddresses: []
      serverClient:
        metadata:
          labels: {}
          annotations: {}
        duration: 8760
        renewBefore: 4380
        deltaRenewBeforeByInstance: 60
        measurement: h
        subject:
          organizations: []
        usages:
          - "signing"
          - "key encipherment"
          - "client auth"
        dnsNames: []
        ipAddresses: []
